CREATE TABLE long-chariot-348511.chapter3.mst_categories (
    category_id integer
  , name        string(255)
);

INSERT INTO long-chariot-348511.chapter3.mst_categories
VALUES
    (1, 'dvd' )
  , (2, 'cd'  )
  , (3, 'book')
;

CREATE TABLE long-chariot-348511.chapter3.category_sales (
    category_id integer
  , sales       integer
);

INSERT INTO long-chariot-348511.chapter3.category_sales
VALUES
    (1, 850000)
  , (2, 500000)
;

CREATE TABLE long-chariot-348511.chapter3.product_sale_ranking (
    category_id integer
  , rank        integer
  , product_id  string(255)
  , sales       integer
);

INSERT INTO long-chariot-348511.chapter3.product_sale_ranking
VALUES
    (1, 1, 'D001', 50000)
  , (1, 2, 'D002', 20000)
  , (1, 3, 'D003', 10000)
  , (2, 1, 'C001', 30000)
  , (2, 2, 'C002', 20000)
  , (2, 3, 'C003', 10000)
;

select m.category_id, m.name, s.sales, r.product_id as sale_product
from long-chariot-348511.chapter3.mst_categories as m
join long-chariot-348511.chapter3.category_sales as s
on m.category_id = s.category_id -- m과 s에서 category_id가 일치하는 행 조인 --
join long-chariot-348511.chapter3.product_sale_ranking as r
on m.category_id = r.category_id;

select m.category_id, m.name, s.sales, r.product_id as top_sale_product
from long-chariot-348511.chapter3.mst_categories as m
left join long-chariot-348511.chapter3.category_sales as s -- left join 사용시 조건에 맞지 않아 조인되지 않더라도 모든 행 출력 --
on m.category_id = s.category_id
left join long-chariot-348511.chapter3.product_sale_ranking as r
on m.category_id = r.category_id
and r.rank=1;

select m.category_id, m.name,
(select s.sales from long-chariot-348511.chapter3.category_sales as s
where m.category_id = s.category_id) as sales, -- 추출 행에서 서브쿼리 사용(조인 없이 같은 결과) --
(select r.product_id from long-chariot-348511.chapter3.product_sale_ranking as r
where m.category_id = r.category_id
order by sales desc limit 1) as top_sale_product
from long-chariot-348511.chapter3.mst_categories as m; 
